{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundry.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","ErrorBoundry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","Scroll","style","overflowY","border","height","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d0c7049.chunk.js","sourcesContent":["import React from 'react';\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow shadow-5'>\n      <img alt='robofriends' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2> {name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../components/Card';\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error('Noooooo!');\n  // }\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React from 'react';\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '800px',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({searchChange})=> {\n\treturn (\n\t\t\t<div className='pa2'>\n\t\t\t\t<input \n\t\t\t\tclassName='pa2 ba b--green bg-lightest-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='Search Robots'\n\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\n\t\t\t</div>\n\n\t\t);\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport '../containers/App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}